#jdbc参数
#druid可以自动识别driverClassName，但是建议配上
jdbc.driverClassName=com.mysql.jdbc.Driver
#数据库连接地址
jdbc.url=jdbc:mysql://127.0.0.1:3306/test?useUnicode=true&characterEncoding=utf-8&useSSL=false
#数据库连接用户
jdbc.username=root
#数据库连接密码
jdbc.password=feng1104

#dataSource参数
#初始化建立物理连接的个数
dataSource.initialSize=1
#最小连接池数
dataSource.minIdle=1
#已经不使用了，有些教程里面还有，配了也没用
#dataSource.maxIdle=?
#最大连接池数量
dataSource.maxActive=10
#获取连接时最大等待时间，单位毫秒。
#配置了maxWait之后，缺省启用公平锁，并发效率会有所下降，
#如果需要可以通过配置useUnfairLock属性为true使用非公平锁。
dataSource.maxWait=10000
#是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，
#比如说oracle。oracle数据库可以开启，但是mysql下建议关闭。
dataSource.poolPreparedStatements=false
#如果上面为true可配置下一条参数
#dataSource.maxPoolPreparedStatementPerConnectionSize=20
#要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。在Druid中，
#不会存在Oracle下PSCache占用内存过多的问题，可以把这个数值配置大一些，比如说100
dataSource.maxOpenPreparedStatements=-1

#间隔多少ms检测需要关闭的空闲连接
dataSource.timeBetweenEvictionRunsMillis=60000
#一个连接在连接池最小生存时间 ms
dataSource.minEvictableIdleTimeMillis=300000

#用来检测连接是否有效的sql，要求是一个查询语句。
#如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会其作用。
dataSource.validationQuery=select 1 
#属性类型是字符串，通过别名的方式配置扩展插件，常用的插件有：
#监控统计用的filter:stat日志用的filter:log4j防御sql注入的filter:wall
dataSource.filters=stat

#申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
dataSource.testOnBorrow=true
#归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
dataSource.testOnReturn=false
#建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测
#如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
dataSource.testWhileIdle=true

dataSource.maxPoolPreparedStatementPerConnectionSize=20
dataSource.defaultAutoCommit=true

